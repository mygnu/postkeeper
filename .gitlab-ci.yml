stages:
  - build_and_unit_tests
  - upload_deb
  - release_deb


variables:
  GIT_SUBMODULE_STRATEGY: recursive
  TESTS_INSTANCE_BASENAME: postkeeper-test
  CARGO_HOME: ${CI_PROJECT_DIR}/.cargo
  SERVICE_VERSION: 0.3.2
  PKG_CONFIG_PATH: . # needed by milter crate

# Builds the postkeeper artefacts and runs the unit tests
build_and_unit_tests:
  image: registry.dev.enhance.com/backend/builder:ubuntu-pk1.45
  stage: build_and_unit_tests
  artifacts:
    paths:
      - target/release/postkeeper
      - "target/debian/postkeeper_${SERVICE_VERSION}_amd64.deb"
  before_script:
    - rustc --version && cargo --version
    - cache-s3 --version
    # restoring cache before we build the project to avoid dependencies recompilation
    - cache-s3 restore --max-age "15 days" --git-branch ${CI_PROJECT_NAME}
  after_script:
    # after the build has finished we upload the dependencies to S3
    - cache-s3 save -p ${CARGO_HOME} -p target/release --git-branch ${CI_PROJECT_NAME}
  script:
     - eval $(ssh-agent -s)
     - ssh-add <(echo "$SSH_KEY" | base64 -d)
     - mkdir -p ~/.ssh
     - chmod 700 ~/.ssh
     - cargo build --release
     # create debian package
     - cargo-deb
     - RUST_LOG=postkeeper=trace cargo test --release -- --nocapture --test-threads=1

# Upload development deb package to bucket
upload_deb:
  stage: upload_deb
  image: google/cloud-sdk:latest
  script:
    - cat <(echo "$GCP_KEY" | base64 -d) >~/api_key
    - gcloud auth activate-service-account --key-file ~/api_key
    - gsutil cp "target/debian/postkeeper_${SERVICE_VERSION}_amd64.deb" "gs://postkeeper/postkeeper_${SERVICE_VERSION}_dev_amd64.deb"

# Upload release deb package to bucket
release_deb:
  stage: upload_deb
  image: google/cloud-sdk:latest
  only:
    refs:
      - master
  script:
    - cat <(echo "$GCP_KEY" | base64 -d) >~/api_key
    - gcloud auth activate-service-account --key-file ~/api_key
    - gsutil cp "target/debian/postkeeper_${SERVICE_VERSION}_amd64.deb" "gs://postkeeper"

